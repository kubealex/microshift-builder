---
- name: Setup os-tree image
  hosts: builder
  become: true
  tasks:
    - name: Populate temporary directory
      ansible.builtin.file:
        path: /root/r4e
        state: directory

    - name: Prepare repositories folder
      ansible.builtin.file:
        path: /etc/osbuild-composer/repositories/
        state: directory
        recurse: true
    
    - name: Ensure RHEL8.6 repos are in place
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/osbuild-composer/repositories/
      loop:
        - rhel-8.json
        - rhel-86.json

    - name: Cleanup sources before adding
      ansible.builtin.shell: composer-cli compose list | awk '{ print $1 }'
      register: compose_list
    
    - name: Cleanup
      ansible.builtin.shell: composer-cli compose delete {{ item }}
      loop: "{{ compose_list.stdout_lines }}"

    - name: Restart osbuilder-composer
      ansible.builtin.service:
        name: osbuild-composer.service
        state: restarted
    
    - name: Copy files on builder
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /root/r4e/
      loop:
        - microshift.toml
        - transmission.toml
        - r4e-microshift.toml
        - installer.toml

    - name: Cleanup sources before adding
      ansible.builtin.shell: composer-cli sources delete {{ item }} || true
      loop:
        - microshift
        - transmission

    - name: Add custom sources in composer-cli
      ansible.builtin.shell: composer-cli sources add {{ item }}
      loop:
        - /root/r4e/microshift.toml
        - /root/r4e/transmission.toml
      register: add_sources

    - name: Cleanup blueprint in composer-cli
      ansible.builtin.shell: composer-cli blueprints delete r4e-microshift || true

    - name: Push blueprint in composer-cli
      ansible.builtin.shell: composer-cli blueprints push /root/r4e/r4e-microshift.toml
      register: push_blueprint
      
    - name: Depsolve blueprint dependencies
      ansible.builtin.shell: composer-cli blueprints depsolve r4e-microshift
      register: depsolve_output

    - name: Start os-tree container image build
      ansible.builtin.shell: composer-cli compose start-ostree --ref rhel/8/$(uname -i)/edge r4e-microshift edge-container
      register: os_tree_build_output

    - name: Set image UUID as fact
      ansible.builtin.set_fact:
        ostree_image_uuid: "{{ os_tree_build_output.stdout | regex_search('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}') }}"

    - name: Wait for os-tree image to be built
      ansible.builtin.shell: composer-cli compose status | grep {{ ostree_image_uuid }} | awk '{print $2}'
      register: image_status
      until: ("FINISHED" in image_status.stdout) or ("FAILED" in image_status.stdout)
      retries: 50
      delay: 120

    - name: Download the image
      ansible.builtin.shell:
        cmd: composer-cli compose logs {{ ostree_image_uuid }} && composer-cli compose metadata {{ ostree_image_uuid }} && composer-cli compose image {{ ostree_image_uuid }}
        chdir: /root/r4e

    - name: Cleanup previous containers
      containers.podman.podman_container:
        name: rhel-edge-container
        force: true
        state: absent

    - name: Cleanup previous images
      containers.podman.podman_image:
        name: localhost/rhel-edge-container
        force: true
        state: absent

    - name: Load os-tree tar into OCI image
      containers.podman.podman_load:
        input: /root/r4e/{{ ostree_image_uuid }}-container.tar
      register: image_load

    - name: Set image id as fact
      ansible.builtin.set_fact:
        ostree_image_id: "{{ image_load.image.Id }}"

    - name: Tag resulting image
      containers.podman.podman_tag:
        image: "{{ ostree_image_id }}"
        target_names:
          - localhost/rhel-edge-container

    - name: Run os-tree container
      containers.podman.podman_container:
        image: localhost/rhel-edge-container
        publish:
          - 8080:8080
        name: rhel-edge-container
        detach: true
        state: started

    - name: Remove RHEl8.6 repos from builder
      ansible.builtin.file:
        path: /etc/osbuild-composer/repositories/{{ item }}
        state: absent
      loop:
        - rhel-8.json
        - rhel-86.json
        
    - name: Restart osbuilder-composer
      ansible.builtin.service:
        name: osbuild-composer.service
        state: restarted        

    - name: Cleanup in composer-cli
      ansible.builtin.shell: composer-cli blueprints delete installer || true

    - name: Push blueprint in composer-cli
      ansible.builtin.shell: composer-cli blueprints push /root/r4e/installer.toml
      register: push_blueprint
      
    - name: Depsolve blueprint dependencies
      ansible.builtin.shell: composer-cli blueprints depsolve installer
      register: depsolve_output        

    - name: Start installer image build
      ansible.builtin.shell: composer-cli compose start-ostree --ref rhel/8/$(uname -i)/edge --url http://localhost:8080/repo/ installer edge-installer
      register: installer_build_output

    - name: Set installer image UUID as fact
      ansible.builtin.set_fact:
        installer_image_uuid: "{{ installer_build_output.stdout | regex_search('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}') }}"

    - name: Wait for installer image to be built
      ansible.builtin.shell: composer-cli compose status | grep {{ installer_image_uuid }} | awk '{print $2}'
      register: image_status
      until: ("FINISHED" in image_status.stdout) or ("FAILED" in image_status.stdout)
      retries: 50
      delay: 120

    - name: Download the image
      ansible.builtin.shell:
        cmd: composer-cli compose logs {{ installer_image_uuid }} && composer-cli compose metadata {{ installer_image_uuid }} && composer-cli compose image {{ installer_image_uuid }}
        chdir: /root/r4e

    - name: Remove os-tree container
      containers.podman.podman_container:
        name: rhel-edge-container
        state: absent

    - name: Remove os-tree image
      containers.podman.podman_image:
        name: "{{ ostree_image_id }}"
        state: absent
    
    - name: Prepare deployment folder in playbook directory
      ansible.builtin.file:
        path: "{{ playbook_dir }}/rhel4edge"
        state: directory
      delegate_to: 127.0.0.1

    - name: Fetch built image
      ansible.posix.synchronize:
        src: /root/r4e/{{ installer_image_uuid }}-installer.iso
        dest: "{{ playbook_dir }}/rhel4edge/r4e-microshift-installer.x86_64.iso"
        mode: pull
      delegate_to: 127.0.0.1
    